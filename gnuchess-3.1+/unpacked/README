This is an update of gnuchess version 3.1.

It fixes all known bugs with pawn promotion, undo, and win/draw determination.

It adds the capability of reading xboard position files (xget).

It adds specification of save and load files on the command line (gnuchessr).

Save file format is now human readable.

'white' and 'black' no longer start play but only set the players. If the 
computer is to move first use the 'go' command.


New commands are xget and hashlevel.
	
	xget reads an xboard position file.

	hashlevel allows you to specify parameters for using the hashfile.

New Programs -

	postprint - allows printing of hashfile contents on a postscript printer
		for each position it prints tha board and the recommended move
		flags and depth.
		To run: just execute the program (pathname for hashfile is
			build in. Output comes out stdout. Then cat it with 
			ChessFonts and sent it to the printer. It prints 16
			positions per page.

			postprint >t
			cat ChessFonts t >p
			lpr p

	gnuan - a modified version of Truman Collins gnuan program with fixes
                for the gnuchess bugs. In addition it shows the best line for
                each move instead of just the next move. It will accept input
	        files produced by xboard (xboard.game.save) or from gnuchess
	        (chess.lst) files directly. 
		
		Output looks like this:

Move White Black      Score Depth     Best Line
------------------------------------------------------------------
  1   e2e4              13    5    g1f3  g8f6  b1c3  b8c6  e2e3 
            c7c5        -2    5    e7e6  b1c3  b8c6  d2d4  f8b4 
  2   b1c3              37    5    b1c3  b8c6  g1f3  g8f6  f1c4 
            b8c6       -34    5    b8c6  g1f3  g8f6  f1b5  c6b4 
  3   g1f3              44    5    g1f3  g8f6  f1b5  h7h6  d2d3 
            g8f6       -38    5    g8f6  f1b5  a7a6  b5c6  d7c6 
  4   f1c4              38    5    f1b5  c6d4  d2d3  d4b5  c3b5 
            d7d6       -20    5    d7d6  d2d3  c8g4  h2h3  g4h5 

           White's percentage was 50.00%.     Black's percentage was 75.00%.

           Elapsed time was 128 seconds.
